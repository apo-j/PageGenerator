(function(pages){ko.bindingProvider.instance = new StringInterpolatingBindingProvider();var viewModel = function(){	var self = this;	self.page = {        id : ko.observable(''),        on : ko.observable(false),        leftSideBar : new components.sideBar(utilities.getID(), false, []),        rightSideBar :  new components.sideBar(utilities.getID(), false, []),        title : ko.observable('sfasd'),        sections :ko.observableArray([])    };    self.availableLanguages = ko.observableArray([ 'zh','en','fr']);    self.options = {};    self.options.sideBar = [        {name:'Properties',  value:enums.optionsEnums.Properties},        {name : 'Add child', value:enums.optionsEnums.Add},        {name: 'Delete', value:enums.optionsEnums.Delete}    ];    self.componentTemplateToUse = function(data){       return self.currentPageComponent();    };    self.pageComponentData = ko.observable({});    self._currentPageComponent =  ko.observable(enums.componentIdEnum.None);    self.currentPageComponent = ko.computed({       read:function(){           var tt = {temp: self.pageComponentData(),                res:self._currentPageComponent()            };            return tt.res;       },       write:function(val){        self._currentPageComponent(val);           var tt = 'dd';       }    });    self.options.onClick = function(data, event, callback){        var res = {};        if(!!callback && typeof callback === 'function'){            res = callback(data,event);        }        //self._currentPageComponent(res.currentPageComponent);        switch(data.value){            case enums.optionsEnums.Properties:                self.currentPageComponent(res.currentPageComponent);                self.pageComponentData(res.outObject || {});                break;            case enums.optionsEnums.Add:                //self.currentPageComponent(res.currentPageComponent);                self.pageComponentData(res.outObject || {});                break;            case enums.optionsEnums.Delete:                //self.currentPageComponent(res.currentPageComponent);                self.pageComponentData({});                break;            default :                console.log('option : ' + data.name + 'not defined');                break;        };    };}ko.applyBindings(new viewModel());}());