(function(pages){ko.bindingProvider.instance = new StringInterpolatingBindingProvider();var viewModel = function(){	var self = this;	self.page = {        id : ko.observable(''),        on : ko.observable(false),        leftSideBar : new components.sideBar(1, false, []),        rightSideBar :  new components.sideBar(2, false, []),        title : ko.observable('sfasd'),        sections :ko.observableArray([])    };    self.availableLanguages = ko.observableArray([ 'zh','en','fr']);    self.pageComponentData = new components.bloc(vars.ID, false, enums.blocTypeEnum.None, 'new bloc');    //blocItem    self.blocItem = new components.blocItem();    self.blocItem.dataAttr = {'class': 'gott', 'id':'play'};    self.createDataAttrItem = function(){        //self.blocItem.dataAttr.    }    self.createBlocItem = function(){      self.page.leftSideBar.items.push(self.blocItem);        var tt = 'dd';    };    self.options = {};    self.options.sideBar = [        {name:'Properties',  value:enums.optionsEnums.Properties},        {name : 'Add child', value:enums.optionsEnums.Add},        {name: 'Delete', value:enums.optionsEnums.Delete}    ];    self.options.onClick = function(data, event, callback){        var res = {};        if(!!callback && typeof callback === 'function'){            res = callback(data,event);        }        switch(data.value){            case enums.optionsEnums.Properties:                self.pageComponentData = res.outObject || {};                break;            case enums.optionsEnums.Add:                self.pageComponentData = res.outObject || {};                break;            case enums.optionsEnums.Delete:                self.pageComponentData = {};                break;            default :                console.log('option : ' + data.name + 'not defined');                break;        };    };	/*var navBar = new components.navBar(1, true,[        new components.navBarItem(enums.PagesEnum.Index, true,true, enums.navBarTraductionCodeEnum.SiteName,[types.languages.Chinese, types.languages.French],{class:'fortrahhit home'}),        new components.navBarItem(enums.PagesEnum.WindowPVC, true,false,enums.navBarTraductionCodeEnum.FentrePVC,[types.languages.Chinese, types.languages.French]),        new components.navBarItem(enums.PagesEnum.WindowAltertini, true,false,enums.navBarTraductionCodeEnum.FenetreBois,[types.languages.Chinese, types.languages.French]),        new components.navBarItem(enums.PagesEnum.WindowAluminium, true,false,enums.navBarTraductionCodeEnum.FenetreAluminium,[types.languages.Chinese, types.languages.French]),        new components.navBarItem(enums.PagesEnum.Doors, true,false,enums.navBarTraductionCodeEnum.Portes,[types.languages.Chinese, types.languages.French])    ]);*/    /*self.module = new components.module({id:1, on:true, navBar: navBar, pages:self.pages});*/}ko.applyBindings(new viewModel());}());